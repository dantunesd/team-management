// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocks

import (
	domain "team-management/members/domain"

	mock "github.com/stretchr/testify/mock"
)

// TypeData is an autogenerated mock type for the TypeData type
type TypeData struct {
	mock.Mock
}

// GetType provides a mock function with given fields:
func (_m *TypeData) GetType() domain.Type {
	ret := _m.Called()

	var r0 domain.Type
	if rf, ok := ret.Get(0).(func() domain.Type); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(domain.Type)
	}

	return r0
}

// IsValid provides a mock function with given fields:
func (_m *TypeData) IsValid() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

type mockConstructorTestingTNewTypeData interface {
	mock.TestingT
	Cleanup(func())
}

// NewTypeData creates a new instance of TypeData. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTypeData(t mockConstructorTestingTNewTypeData) *TypeData {
	mock := &TypeData{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
