// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// CustomHandler is an autogenerated mock type for the CustomHandler type
type CustomHandler struct {
	mock.Mock
}

// Execute provides a mock function with given fields: w, r
func (_m *CustomHandler) Execute(w http.ResponseWriter, r *http.Request) error {
	ret := _m.Called(w, r)

	var r0 error
	if rf, ok := ret.Get(0).(func(http.ResponseWriter, *http.Request) error); ok {
		r0 = rf(w, r)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewCustomHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewCustomHandler creates a new instance of CustomHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCustomHandler(t mockConstructorTestingTNewCustomHandler) *CustomHandler {
	mock := &CustomHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
